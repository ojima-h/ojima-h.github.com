<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | My Octopress Blog]]></title>
  <link href="http://ojima-h.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://ojima-h.github.com/"/>
  <updated>2012-10-08T19:07:04+09:00</updated>
  <id>http://ojima-h.github.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails SourceCode Reading #1]]></title>
    <link href="http://ojima-h.github.com/blog/2012/04/22/rsr-1/"/>
    <updated>2012-04-22T19:42:00+09:00</updated>
    <id>http://ojima-h.github.com/blog/2012/04/22/rsr-1</id>
    <content type="html"><![CDATA[<h2>前半は Ruby の基礎のお話。</h2>

<p><a href="http://i.loveruby.net/ja/rhg/book/minimum.html">http://i.loveruby.net/ja/rhg/book/minimum.html</a> に沿って話した。</p>

<p>要は、<strong>全てのモノはオブジェクトである</strong>、というお話。</p>

<p>話したこととしては、</p>

<ul>
<li>クラスは Class というクラスのインスタンスである。</li>
<li>モジュールは Module というクラスのインスタンスである。</li>
<li>Module クラスは Class クラスのインスタンスである。</li>
<li>Class クラスは Class クラスのインスタンスである。</li>
<li><p>すべてのクラスは superclass に Object を持つ。
Object クラスの superclass は nil である。</p>

<p>(今は、Object クラスの superclass は BasicObject になっているぽい。)</p>

<p>(今日話したときは、「全てのオブジェクトは Object を superclass に持つ」とか言ってた気がする)</p></li>
</ul>


<p>とかとか。</p>

<p>一応整理しておくと、</p>

<ul>
<li>オブジェクト間の関係

<ul>
<li>クラス - インスタンスの関係</li>
<li>is_a 関係</li>
</ul>
</li>
<li>クラス間の関係

<ul>
<li>継承関係</li>
<li>ネスト</li>
</ul>
</li>
</ul>


<p>今日話した時は、クラス - インスタンスの関係と is_a 関係を混同していた...</p>

<h3>is_a 関係について</h3>

<p><a href="http://d.hatena.ne.jp/willnet/20080523/1211512760">http://d.hatena.ne.jp/willnet/20080523/1211512760</a></p>

<p><code>foo.is_a? Foo</code> が真になるのは、</p>

<ul>
<li>foo が Foo のインスタンスであるとき</li>
<li>foo が Foo のサブクラスのインスタンスであるとき</li>
<li>foo が モジュール Foo をインクルードしたクラスのインスタンスであるとき</li>
<li>foo が モジュール Foo をインクルードしたクラスのサブクラスのインスタンスであるとき</li>
</ul>


<p>あとは、特異メソッドの話。</p>

<p>結局、<code>include</code> と <code>extend</code> の違いを説明したかっただけな気がする。</p>

<h2>後半は ActiveRecord の解読</h2>

<p><a href="http://ojima-h.github.com/rails-sourcecode-reading-slide-1/">http://ojima-h.github.com/rails-sourcecode-reading-slide-1/</a></p>

<pre><code>@@@ ruby
rails generate scaffold Foo foo:string
</code></pre>

<p>てやったときにできる <code>Foo#foo</code> ていうメソッドがどうやって定義されているのかを解説した。</p>

<ul>
<li>missing_method コワイ</li>
<li>eval コワイ</li>
</ul>


<p>という結論でした。</p>

<h2>ツールについて</h2>

<ul>
<li>showoff が便利</li>
<li>rdefs.el が便利だけど、使いにくい。
せめて、バッファがリードオンリーなのをなんとかしたい。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[cucumber + rspec + webrat の落とし穴]]></title>
    <link href="http://ojima-h.github.com/blog/2012/04/16/cucumber-rspec-webrat-install/"/>
    <updated>2012-04-16T21:17:00+09:00</updated>
    <id>http://ojima-h.github.com/blog/2012/04/16/cucumber-rspec-webrat-install</id>
    <content type="html"><![CDATA[<p>cucumber + rspec + webrat ではまったのでメモ。</p>

<h2>visit が効かない</h2>

<pre><code>When /^visit "(.*)"$/ do |page|
  visit page
  p response
end
</code></pre>

<p>ってやると、<code>nil</code> が表示される。。。</p>

<p>調べていくと、こんなページを発見。</p>

<p><a href="http://forums.pragprog.com/forums/95/topics/4951">http://forums.pragprog.com/forums/95/topics/4951</a></p>

<p>とりあえず、features/support/env.rb に以下を追加。</p>

<pre><code>require 'webrat'

Webrat.configure do  |config|
  config.mode = :rack
end
</code></pre>

<p>そしたら、こんなエラーが発生。。。</p>

<pre><code>No response yet. Request a page first. (Rack::Test::Error)
</code></pre>

<p><a href="http://forums.pragprog.com/forums/95/topics/8962">http://forums.pragprog.com/forums/95/topics/8962</a></p>

<p>このページを参考に、step の定義を次のように変更.</p>

<pre><code>When /^visit "(.*)"$/ do |url|
  visit url
  p page
end
</code></pre>

<p>無事実行されました。</p>

<h2>have_tag にブロックを渡せない</h2>

<pre><code>page.body.should have_selector('a') do |a|
  p a
end
</code></pre>

<p>ってやっても期待する結果が得られない。。。</p>

<p>未だ解決策みつからず。</p>

<p>まぁ、いいか</p>
]]></content>
  </entry>
  
</feed>
